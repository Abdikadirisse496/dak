Rough Guide to doing Stable Point Releases in Debian
----------------------------------------------------

- sudo to dak
- bash:
suite=oldstable
suitename=lenny
pusuite=oldstable-proposed-updates
oldrev=5.0.8
newrev=5.0.9
export SCRIPTVARS=/srv/ftp-master.debian.org/dak/config/debian/vars
. $SCRIPTVARS
. "${configdir}/common"
. "${configdir}/dinstall.functions"
umask 022
export LANG=C
export LC_ALL=C
pg_timestamp pre_${suite}_${newrev}
cd ~
mkdir -p ${suite}_${newrev}
cd ${suite}_${newrev}
dak control-suite -l ${pusuite} > ${pusuite}.list
dak control-suite -l ${suite} > ${suite}.list

- ask SRMs if there is anything to be skipped from this release. If so
  edit ${pusuite}.list (and later the Changelog too)
- bash:
dak make-changelog -s ${pusuite} -b ${suite} | cat - ${ftpdir}/dists/${suite}/ChangeLog | sponge ${ftpdir}/dists/${suite}/ChangeLog
cat ${pusuite}.list | dak control-suite --add ${suite}
dak control-suite --remove ${pusuite} < ${pusuite}.list

- sync with stable RM if there is any propup needed. do it, if so.
- ask rms if they have RMs to do.
- and then check if they have a d-i update. if so, bash:
# set dioldver to "empty" if there is no old to remove
diver=20090123lenny9
dioldver=20090123lenny8
dak copy-installer -s ${pusuite} -d ${suite} ${diver}
cd $ftpdir/dists/${suite}/main
if [ "${dioldver}" != "empty" ]; then
    for iarch in $(dak admin s-a list-arch ${suite}); do
        if [ -d "installer-${iarch}/${dioldver}" ]; then
            echo "Moving installer-${iarch}/${dioldver} to morgue"
            mkdir -p "${base}/morgue/d-i/installer-${iarch}/"
            mv "installer-${iarch}/${dioldver}" "${base}/morgue/d-i/installer-${iarch}/"
        fi
    done
fi
cd $ftpdir/dists/${suite}

- Update version number in README, README.html and dists/README,
  Clean up dists/stable/ChangeLog (add header, basically). bash:
  $EDITOR ChangeLog ../README ../../README*
  rm -f *~ ../*~ ../../*~

- Update the 'Debian<n>.<n>r<n>' symlink in dists/
cd $ftpdir/dists/
rm -f Debian${oldrev}
ln -s ${suitename} Debian${newrev}

- Update fields in suite table in postgresql.
  bash:

mdate=$(date +"%d %B %Y")
psql projectb <<EOF
begin;
update suite set version = '${newrev}' where suite_name = '${suite}';
update suite set description = 'Debian ${newrev} Released ${mdate}' where suite_name = '${suite}';
commit;
EOF

- prepare for gps. bash:
dak dominate --force -s ${suite}
dak generate-filelist -s ${suite}

- Let SRM see if all is ok

- then:
dak generate-packages-sources -s ${suite} ; dak contents generate -f -s ${suite}
dak generate-releases -f -s ${suite}

- have the SRMs sign it and put the signature in.
- Check if a mirror push is needed or next dinstall is enough. for a push
o if so, bash:

TRACEFILE="${ftpdir}/project/trace/ftp-master.debian.org"
DATE_SERIAL=$(date +"%Y%m%d01")
FILESOAPLUS1=$(awk '/serial/ { print $3+1 }' ${TRACEFILE} )
if [ "$DATE_SERIAL" -gt "$FILESOAPLUS1" ]; then
    SERIAL="$DATE_SERIAL"
else
    SERIAL="$FILESOAPLUS1"
fi
date -u > ${TRACEFILE}
echo "Using dak v1" >> ${TRACEFILE}
echo "Running on host: $(hostname -f)" >> ${TRACEFILE}
echo "Archive serial: ${SERIAL}" >> ${TRACEFILE}
cd ${mirrordir}
rsync -aH --link-dest ${ftpdir} --delete --delete-after --ignore-errors ${ftpdir}/. .
date -u > /srv/ftp.debian.org/web/mirrorstart
echo "Using dak v1" >> /srv/ftp.debian.org/web/mirrorstart
echo "Running on host $(hostname -f)" >> /srv/ftp.debian.org/web/mirrorstart
sudo -H -u archvsync /home/archvsync/runmirrors > ~dak/runmirrors.log 2>&1 &

