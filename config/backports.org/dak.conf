Dinstall
{
   // Both need to be defined at the moment, but they can point to the
   // same file.
   GPGKeyring {
      "/org/backports.org/keyrings/keyring.gpg";
   };
   // To sign the release files. Adjust the keyid!
   // Note: Key must be without a passphrase or it wont work automagically!
   SigningKeyring "/org/backports.org/s3kr1t/dot-gnupg/secring.gpg";
   SigningPubKeyring "/org/backports.org/s3kr1t/dot-gnupg/pubring.gpg";
   SigningKeyIds "16BA136C";
   SendmailCommand "/usr/sbin/sendmail -odq -oi -t";
   MyEmailAddress "Backports.org archive Installer <installer@backports.org>";
   MyAdminAddress "ftpmaster@backports.org";
   MyHost "backports.org";  // used for generating user@my_host addresses in e.g. manual_reject()
   MyDistribution "Backports.org archive"; // Used in emails
   // Alicia and melanie can use it
   BugServer "bugs.backports.org";
   // melanie uses the packages server.
   // PackagesServer "packages.test.backports.org";
   // If defined then the package@this.server gets a copy of most of the
   // actions related to the package. For an example look at
   // packages.qa.debian.org
   // TrackingServer "packages.qa.test.backports.org";
   LockFile "/org/backports.org/lock/dinstall.lock";
   // If defined this address gets a bcc of all mails.
   // FIXME: Einrichten wenn das hier produktiv geht!
   Bcc "backports-archive@lists.backports.org";
   GroupOverrideFilename "override.group-maint";
   FutureTimeTravelGrace 28800; // 8 hours
   PastCutoffYear "1984";
   SkipTime 300;
   // If defined then mails to close bugs are sent to the bugserver.
   CloseBugs "false";
   OverrideDisparityCheck "true";
   DefaultSuite "etch-backports";
   Reject
   {
     NoSourceOnly "true";
     ReleaseTransitions "/org/backports.org/hints/transitions.yaml";
   };
   // If set, only send mails to addresses listed there.
   MailWhiteList "/org/backports.org/dak/config/backports.org/mail-whitelist";
};

Generate-Index-Diffs
{
   Options
   {
     TempDir "/org/backports.org/tiffani";
     MaxDiffs { Default 50; };
   };
};

Override
{
   MyEmailAddress "Backports.org archive FTP Masters <ftpmaster@backports.org>";
};

Add-User
{
// Should we sent a mail to newly added users?
  SendEmail "true";

// Should we create an account so they can login?
// Account will be created with the defaults from adduser, so adjust
// it's configuration to fit your needs.
// NOTE: This requires that your dak user has a sudo entry, allowing
// to run /usr/sbin/useradd!
  CreateAccount "false";

// Note: This is a comma separated list of additional groupnames to
// which uma should add the user. NO spaces between the groupnames or
// useradd will die.
// Disable it if you dont want or need that feature.
  GID "debuser";

};

Check-Overrides
{
  OverrideSuites
  {
    lenny-backports
    {
      Process "1";
//      OriginSuite "Unstable";
    };

    etch-backports
    {
      Process "1";
//      OriginSuite "Unstable";
    };

//    Unstable
//    {
//    Process "0";
//  };
  };
};


Import-Users-From-Passwd
{
  // The Primary GID of your users. Using uma it is the gid from group users.
  ValidGID "1001";
  // Comma separated list of users who are in Postgres but not the passwd file
  KnownPostgres "postgres,katie";
};

Clean-Queues
{
  Options
  {
    Days 14;
   };
 MorgueSubDir "queues";
};

Control-Overrides
{
  Options
  {
    Component "main";
    Suite "etch-backports";
    Type "deb";
   };

 ComponentPosition "prefix"; // Whether the component is prepended or appended to the section name
};

Rm
{
  Options
  {
    Suite "etch-backports";
   };

   MyEmailAddress "Backports.org archive Maintenance <ftpmaster@backports.org>";
   LogFile "/org/backports.org/ftp/removals.txt";
};

Import-Archive
{
  ExportDir "/org/backports.org/dak/import-archive-files/";
};

Clean-Suites
{
  // How long (in seconds) dead packages are left before being killed
  StayOfExecution 1209600; // 14 days
  AcceptedAutoBuildStayOfExecution 86400; // 24 hours
  MorgueSubDir "pool";
};

Process-New
{
  AcceptedLockFile "/org/backports.org/lock/unchecked.lock";
};

Suite
{
  lenny-backports
  {
	Components
	{
	  main;
	  contrib;
	  non-free;
	};

	Announce "backports-changes@lists.backports.org";
	Origin "Backports.org archive";
	Description "Backports for the Lenny Distribution";
	CodeName "lenny-backports";
	OverrideCodeName "lenny-backports";
	Priority "7";
	NotAutomatic "yes";
  };

  etch-backports
  {
	Components
	{
	  main;
	  contrib;
	  non-free;
	};
	Announce "backports-changes@lists.backports.org";
	Origin "Backports.org archive";
	Description "Backports for the Etch Distribution";
	CodeName "etch-backports";
	OverrideCodeName "etch-backports";
	Priority "7";
	NotAutomatic "yes";
  };

};

Dir
{
  Root "/org/backports.org/ftp/";
  Pool "/org/backports.org/ftp/pool/";
  Templates "/org/backports.org/dak/templates/";
  PoolRoot "pool/";
  Lists "/org/backports.org/database/dists/";
  Log "/org/backports.org/log/";
  Morgue "/org/backports.org/morgue/";
  MorgueReject "reject";
  Lock "/org/backports.org/lock";
  Override "/org/backports.org/scripts/override/";
  UrgencyLog "/org/backports.org/testing/urgencies/";
  Queue
  {
    Accepted "/org/backports.org/queue/accepted/";
    Byhand "/org/backports.org/queue/byhand/";
    Done "/org/backports.org/queue/done/";
    Holding "/org/backports.org/queue/holding/";
    New "/org/backports.org/queue/new/";
    ProposedUpdates "/org/backports.org/queue/p-u-new/";
    Reject "/org/backports.org/queue/reject/";
    Unchecked "/org/backports.org/queue/unchecked/";
    BTSVersionTrack "/org/backports.org/queue/bts_version_track/";
    Embargoed "/org/backports.org/queue/Embargoed/";
    Unembargoed "/org/backports.org/queue/Unembargoed/";
    OldProposedUpdates "/org/backports.org/queue/Unembargoed/";
  };
};

DB
{
  Name "projectb";
  Host "";
  Port -1;
};

SuiteMappings
{
 "propup-version stable-security testing";
 "propup-version testing-security unstable";
// "map stable proposed-updates";
 "map lenny lenny-backports";
 "map lenny-bpo lenny-backports";
 "map etch etch-backports";
// formi mag des nit
// "map stable etch-backports";
 "map etch-bpo etch-backports";
// "map stable-security proposed-updates";
// "map-unreleased stable unstable";
// "map-unreleased proposed-updates unstable";
// "map testing testing-proposed-updates";
// "map testing-security testing-proposed-updates";
// "map-unreleased testing unstable";
// "map-unreleased testing-proposed-updates unstable";
};

Architectures
{
  source "Source";
  all "Architecture Independent";
  alpha "DEC Alpha";
  amd64 "AMD x86_64 (AMD64)";
  hurd-i386 "Intel ia32 running the HURD";
  hppa "HP PA RISC";
  arm "ARM";
  armel "ARM EABI";
  i386 "Intel ia32";
  ia64 "Intel ia64";
  m68k "Motorola Mc680x0";
  mips "MIPS (Big Endian)";
  mipsel "MIPS (Little Endian)";
  powerpc "PowerPC";
  s390 "IBM S/390";
  sh "Hitatchi SuperH";
  sparc "Sun SPARC/UltraSPARC";
};

Archive
{
  backports
  {
    OriginServer "backports.org";
    PrimaryMirror "backports.org";
    Description "Master Archive for Backports.org archive";
  };
};

Component
{
  main
  {
	Description "Main";
	MeetsDFSG "true";
  };

  contrib
  {
	Description "Contrib";
	MeetsDFSG "true";
  };

  non-free
  {
        Description "Software that fails to meet the DFSG";
        MeetsDFSG "false";
  };

};

Section
{
  admin;
  cli-mono;
  comm;
  database;
  debian-installer;
  debug;
  devel;
  doc;
  editors;
  embedded;
  electronics;
  fonts;
  games;
  gnome;
  graphics;
  gnu-r;
  gnustep;
  hamradio;
  haskell;
  httpd;
  interpreters;
  java;
  kde;
  kernel;
  libdevel;
  libs;
  lisp;
  localization;
  mail;
  math;
  misc;
  net;
  news;
  ocaml;
  oldlibs;
  otherosfs;
  perl;
  php;
  python;
  ruby;
  science;
  shells;
  sound;
  tex;
  text;
  utils;
  web;
  vcs;
  video;
  x11;
  xfce;
  zope;
};

Priority
{
  required 1;
  important 2;
  standard 3;
  optional 4;
  extra 5;
  source 0; // i.e. unused
};

OverrideType
{
  deb;
  udeb;
  dsc;
};

Location
{
  // Pool locations on backports.org
  /org/backports.org/ftp/pool/
    {
      Archive "backports";
      Type "pool";
    };

};

Urgency
{
  Default "low";
  Valid
  {
    low;
    medium;
    high;
    emergency;
    critical;
  };
};
