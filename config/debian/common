# log something (basically echo it together with a timestamp)
#
# Set $PROGRAM to a string to have it added to the output.
function log () {
        if [ -z "${PROGRAM}" ]; then
                echo "$(date +"%b %d %H:%M:%S") $(hostname -s) [$$] $@"
        else
                echo "$(date +"%b %d %H:%M:%S") $(hostname -s) ${PROGRAM}[$$]: $@"
        fi
}

# log the message using log() but then also send a mail
# to the address configured in MAILTO (if non-empty)
function log_error () {
        log "$@"
        if [ -z "${MAILTO}" ]; then
                echo "$@" | mail -e -s "[$PROGRAM@$(hostname -s)] ERROR [$$]" ${MAILTO}
        fi
}

# debug log, only output when DEBUG=1
function debug () {
    if [ $DEBUG -eq 1 ]; then
        log "$*"
    fi
}

# used by cron.dinstall *and* cron.unchecked.
function make_buildd_dir () {
	cd $configdir
	apt-ftparchive -qq -o APT::FTPArchive::Contents=off generate apt.conf.buildd

	cd  ${incoming}
	rm -f buildd/Release*
	apt-ftparchive -qq -o APT::FTPArchive::Release::Origin="Debian" -o APT::FTPArchive::Release::Label="Debian" -o APT::FTPArchive::Release::Description="buildd incoming" -o APT::FTPArchive::Release::Architectures="${archs}" release buildd > Release
	gpg --secret-keyring /srv/ftp.debian.org/s3kr1t/dot-gnupg/secring.gpg --keyring /srv/ftp.debian.org/s3kr1t/dot-gnupg/pubring.gpg --no-options --batch --no-tty --armour --default-key 6070D3A1 --detach-sign -o Release.gpg Release
	mv Release* buildd/.

	cd ${incoming}
	mkdir -p tree/${STAMP}
	cp -al ${incoming}/buildd/. tree/${STAMP}/
	ln -sfT tree/${STAMP} ${incoming}/builddweb
	find ./tree -mindepth 1 -maxdepth 1 -not -name "${STAMP}" -type d -print0 | xargs --no-run-if-empty -0 rm -rf
}
